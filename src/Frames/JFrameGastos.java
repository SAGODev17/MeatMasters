/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Frames;

import java.awt.Font;
import static java.awt.Frame.MAXIMIZED_BOTH;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sergio
 */
public final class JFrameGastos extends javax.swing.JFrame {

    /**
     * Creates new form JFrameGastos
     */
    Conexion ConeBD = new Conexion();
    SoloMayusculas mayus = new SoloMayusculas();
    public int Ingreso = 0;
    public int id_gastos = 0;
    public int id_cc = 0;
    public int busqueda = 2;
    public String SqlMostrarT;

    DefaultTableModel DatosGastos;
    Object DatGastos[] = new Object[6];

    public JFrameGastos() {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            this.setUndecorated(true);
            initComponents();
            this.apagar();
            this.jlabelCc.setVisible(false);

            this.setExtendedState(MAXIMIZED_BOTH);
        } catch (ClassNotFoundException | IllegalAccessException | InstantiationException | UnsupportedLookAndFeelException err) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMonthChooser1 = new com.toedter.calendar.JMonthChooser();
        jLabel14 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        rSCrear = new rsbuttom.RSButtonMetro();
        rSCrear1 = new rsbuttom.RSButtonMetro();
        rSCrear3 = new rsbuttom.RSButtonMetro();
        rSCrear4 = new rsbuttom.RSButtonMetro();
        rSCrear5 = new rsbuttom.RSButtonMetro();
        jPanel2 = new javax.swing.JPanel();
        jTextCantidad = new javax.swing.JTextField();
        jTextFieldValor = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextFieldID = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldDescripcion = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldBnombre = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jDateChooserB = new com.toedter.calendar.JDateChooser();
        jButtonBusqueda = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JSeparator();
        jlabelCc = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablaGastos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        jPanel3.setBackground(new java.awt.Color(109, 0, 25));
        jPanel3.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 0, 0, new java.awt.Color(255, 255, 255)));

        rSCrear.setText("EDITAR");
        rSCrear.setColorHover(new java.awt.Color(204, 0, 0));
        rSCrear.setColorNormal(new java.awt.Color(255, 204, 204));
        rSCrear.setColorPressed(new java.awt.Color(51, 0, 0));
        rSCrear.setColorTextNormal(new java.awt.Color(0, 0, 0));
        rSCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSCrearActionPerformed(evt);
            }
        });

        rSCrear1.setText("NUEVO");
        rSCrear1.setColorHover(new java.awt.Color(204, 0, 0));
        rSCrear1.setColorNormal(new java.awt.Color(255, 204, 204));
        rSCrear1.setColorPressed(new java.awt.Color(51, 0, 0));
        rSCrear1.setColorTextNormal(new java.awt.Color(0, 0, 0));
        rSCrear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSCrear1ActionPerformed(evt);
            }
        });

        rSCrear3.setText("Cerrar");
        rSCrear3.setColorHover(new java.awt.Color(204, 0, 0));
        rSCrear3.setColorNormal(new java.awt.Color(255, 204, 204));
        rSCrear3.setColorPressed(new java.awt.Color(51, 0, 0));
        rSCrear3.setColorTextNormal(new java.awt.Color(0, 0, 0));
        rSCrear3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSCrear3ActionPerformed(evt);
            }
        });

        rSCrear4.setText("ELIMINAR");
        rSCrear4.setColorHover(new java.awt.Color(204, 0, 0));
        rSCrear4.setColorNormal(new java.awt.Color(255, 204, 204));
        rSCrear4.setColorPressed(new java.awt.Color(51, 0, 0));
        rSCrear4.setColorTextNormal(new java.awt.Color(0, 0, 0));
        rSCrear4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSCrear4ActionPerformed(evt);
            }
        });

        rSCrear5.setText("GUARDAR");
        rSCrear5.setColorHover(new java.awt.Color(204, 0, 0));
        rSCrear5.setColorNormal(new java.awt.Color(255, 204, 204));
        rSCrear5.setColorPressed(new java.awt.Color(51, 0, 0));
        rSCrear5.setColorTextNormal(new java.awt.Color(0, 0, 0));
        rSCrear5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSCrear5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rSCrear1, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                    .addComponent(rSCrear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rSCrear4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rSCrear3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rSCrear5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rSCrear1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rSCrear, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(rSCrear4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rSCrear5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rSCrear3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        jPanel2.setBackground(new java.awt.Color(109, 0, 25));
        jPanel2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));

        jTextCantidad.setBackground(new java.awt.Color(255, 255, 255));
        jTextCantidad.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTextCantidad.setForeground(new java.awt.Color(0, 0, 0));
        jTextCantidad.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextCantidadKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextCantidadKeyTyped(evt);
            }
        });

        jTextFieldValor.setBackground(new java.awt.Color(255, 255, 255));
        jTextFieldValor.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTextFieldValor.setForeground(new java.awt.Color(0, 0, 0));
        jTextFieldValor.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldValor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldValorActionPerformed(evt);
            }
        });
        jTextFieldValor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldValorKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldValorKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldValorKeyTyped(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("CANTIDAD");

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("VALOR $");

        jLabel12.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("GESTIÓN DE GASTOS");
        jLabel12.setToolTipText("");
        jLabel12.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("NÚMERO REGISTRO");

        jTextFieldID.setBackground(new java.awt.Color(255, 255, 255));
        jTextFieldID.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTextFieldID.setForeground(new java.awt.Color(0, 0, 0));
        jTextFieldID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldID.setEnabled(false);
        jTextFieldID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIDActionPerformed(evt);
            }
        });
        jTextFieldID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldIDKeyTyped(evt);
            }
        });

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("DESCRIPCIÓN DE GASTO");

        jTextFieldDescripcion.setBackground(new java.awt.Color(255, 255, 255));
        jTextFieldDescripcion.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTextFieldDescripcion.setForeground(new java.awt.Color(0, 0, 0));
        jTextFieldDescripcion.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldDescripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDescripcionActionPerformed(evt);
            }
        });
        jTextFieldDescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldDescripcionKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldDescripcionKeyTyped(evt);
            }
        });

        jSeparator2.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator2.setForeground(new java.awt.Color(255, 255, 255));

        jDateChooser1.setBackground(new java.awt.Color(255, 255, 255));
        jDateChooser1.setForeground(new java.awt.Color(0, 0, 0));
        jDateChooser1.setDateFormatString("y/MM/d");
        jDateChooser1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("FECHA DE REGISTRO");

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("BUSQUEDA POR NOMBRE DE USUARIO");

        jTextFieldBnombre.setBackground(new java.awt.Color(255, 255, 255));
        jTextFieldBnombre.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 14)); // NOI18N
        jTextFieldBnombre.setForeground(new java.awt.Color(0, 0, 0));
        jTextFieldBnombre.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldBnombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldBnombreActionPerformed(evt);
            }
        });
        jTextFieldBnombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldBnombreKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldBnombreKeyTyped(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("BUSQUEDA POR FECHA");

        jDateChooserB.setBackground(new java.awt.Color(255, 255, 255));
        jDateChooserB.setForeground(new java.awt.Color(0, 0, 0));
        jDateChooserB.setDateFormatString("y/MM/d");
        jDateChooserB.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jDateChooserB.setOpaque(false);

        jButtonBusqueda.setBackground(new java.awt.Color(109, 0, 25));
        jButtonBusqueda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/icons-search.png"))); // NOI18N
        jButtonBusqueda.setToolTipText("");
        jButtonBusqueda.setBorderPainted(false);
        jButtonBusqueda.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonBusqueda.setFocusPainted(false);
        jButtonBusqueda.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBusquedaActionPerformed(evt);
            }
        });

        jSeparator4.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator4.setForeground(new java.awt.Color(255, 255, 255));

        jlabelCc.setBackground(new java.awt.Color(109, 0, 25));
        jlabelCc.setForeground(new java.awt.Color(109, 0, 25));
        jlabelCc.setEnabled(false);
        jlabelCc.setFocusable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jlabelCc, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldValor, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldBnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooserB, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonBusqueda))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(230, 230, 230))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 1401, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jSeparator4, javax.swing.GroupLayout.DEFAULT_SIZE, 1336, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButtonBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldBnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jDateChooserB, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE))
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel13)
                                .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4)
                                .addComponent(jTextCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7))
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlabelCc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jTextFieldValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextFieldDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(89, 89, 89)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(67, Short.MAX_VALUE)))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                    .addContainerGap(32, Short.MAX_VALUE)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(117, 117, 117)))
        );

        TablaGastos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TablaGastos.setOpaque(false);
        TablaGastos.setSelectionBackground(new java.awt.Color(255, 204, 204));
        TablaGastos.setSelectionForeground(new java.awt.Color(0, 0, 0));
        TablaGastos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaGastosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TablaGastos);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 492, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void tomarFecha(int cc) {
        jlabelCc.setText("" + cc);
    }

    public void agregarGasto() {
        switch (Ingreso) {
            case 1 -> {
                if (jTextFieldDescripcion.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Debe Ingresar una descripción");
                    break;
                }

                if (jTextFieldValor.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Debe ingresar un valor para el gasto");
                    break;
                }
                if (jTextFieldID.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Debe ingresar una cantidad");
                    break;
                }
                insertarGasto();
            }

            case 2 -> {
                if (jTextFieldDescripcion.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Debe Ingresar una descripción");
                    break;
                }
                if (jTextFieldValor.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Debe ingresar un valor para el gasto");
                    break;
                }
                if (jTextFieldID.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Debe ingresar una cantidad");
                    break;
                }
                editarGasto();
            }

            default -> {
            }
        }
    }

    public void editarGasto() {
        System.out.println("entró");
        String SqlEditarCliente;
        try {
            SqlEditarCliente = "UPDATE GASTOS SET DESCRIPCION_GASTO = '" + jTextFieldDescripcion.getText() + "', CANTIDAD = " + jTextCantidad.getText() + ","
                    + " VALOR_GASTO = '" + jTextFieldValor.getText() + "'  WHERE ID_GASTO = " + jTextFieldID.getText();
            System.out.println(SqlEditarCliente);
            ConeBD.StmBD.executeUpdate(SqlEditarCliente);
            JOptionPane.showMessageDialog(null, "Información Modificada del registro: " + jTextFieldID.getText());
            borraCamposr();
            apagar();
            busqueda = 2;
            mostrarDatosTabla();
        } catch (Exception err) {
            err.printStackTrace();
        }
    }

    public void eliminarGasto() {
        String sqlEliminarCo;
        try {
            int confirmacion = JOptionPane.showConfirmDialog(rootPane, "¿Está seguro de eliminar el registro?", "Confirmación de eliminación", JOptionPane.YES_NO_OPTION);
            if (confirmacion == JOptionPane.YES_OPTION) {
                JOptionPane.showMessageDialog(rootPane, "Registro " + jTextFieldID.getText() + " eliminado exitosamente.");
                sqlEliminarCo = "DELETE FROM GASTOS WHERE ID_GASTO  = " + jTextFieldID.getText();
                ConeBD.StmBD.executeUpdate(sqlEliminarCo);
                borraCamposr();
                busqueda = 2;
                mostrarDatosTabla();
            } else {
                JOptionPane.showMessageDialog(rootPane, "Eliminación cancelada.");
            }

        } catch (Exception err) {
            err.printStackTrace();
        }
    }

    public int usuarioid() {
        String id_usu;
        try {
            id_usu = "SELECT MAX(id_gasto)+1 'MAXIMO' FROM GASTOS";
            ConeBD.RstBD = (ResultSet) ConeBD.StmBD.executeQuery(id_usu);
            if (ConeBD.RstBD.next()) {
                id_gastos = Integer.parseInt(ConeBD.RstBD.getString("MAXIMO"));
                jTextFieldID.setText("" + id_gastos);

            }

        } catch (NumberFormatException | SQLException e) {
        }
        return id_gastos;
    }

    public void insertarGasto() {
        String sqlGuardarCliente;
        try {
            SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy-MM-dd");
            String fechaFormateada = formatoFecha.format(jDateChooser1.getDate());
            sqlGuardarCliente = "INSERT INTO GASTOS VALUES (" + id_gastos + ",'" + jTextFieldDescripcion.getText() + "'," + jTextCantidad.getText() + ",'" + jTextFieldValor.getText() +"'," + jlabelCc.getText() + ",'" + fechaFormateada + "')";
            ConeBD.StmBD.executeUpdate(sqlGuardarCliente);
            busqueda = 2;
            mostrarDatosTabla();
            borraCamposr();
            apagar();
        } catch (Exception err) {
            err.printStackTrace();
        } finally {
            JOptionPane.showMessageDialog(null, "Registro Almacenado");
        }
    }

    void mostrarDatosTabla() {
        TablaGastos.clearSelection();
        DatosGastos = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        TablaGastos.setModel(DatosGastos);
        DatosGastos.addColumn("ID");
        DatosGastos.addColumn("Descripción");
        DatosGastos.addColumn("Cantidad");
        DatosGastos.addColumn("Valor");
        DatosGastos.addColumn("Nombre");
        DatosGastos.addColumn("Fecha");

        DefaultTableCellRenderer headerRenderer = (DefaultTableCellRenderer) TablaGastos.getTableHeader().getDefaultRenderer();
        headerRenderer.setHorizontalAlignment(JLabel.CENTER);
        TablaGastos.setRowHeight(30);
        Font headerFont = headerRenderer.getFont();
        Font newHeaderFont = new Font(headerFont.getName(), Font.BOLD, 14);
        TablaGastos.getTableHeader().setFont(newHeaderFont);
        TablaGastos.getTableHeader().setReorderingAllowed(false);
        TablaGastos.getTableHeader().setResizingAllowed(false);

        switch (busqueda) {
            case 0 -> {
                SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy-MM-dd");
                String fechaFormateada = formatoFecha.format(jDateChooserB.getDate());

                SqlMostrarT = "SELECT "
                        + "G.ID_GASTO,  G.descripcion_gasto, G.CANTIDAD, G.CC_EMPLEADO_GASTO, G.VALOR_GASTO, G.FECHA_GASTO,  "
                        + "CONCAT_WS(', ', CASE DAYOFWEEK(G.FECHA_GASTO)"
                        + " WHEN 1 THEN 'Domingo' "
                        + "WHEN 2 THEN 'Lunes' "
                        + "WHEN 3 THEN 'Martes' "
                        + "WHEN 4 THEN 'Mircoles'  "
                        + "WHEN 5 THEN 'Jueves' "
                        + "WHEN 6 THEN 'Viernes' "
                        + "WHEN 7 THEN 'Sabado' "
                        + "END, DATE_FORMAT(G.FECHA_GASTO,'%d-%m-%Y')) AS FECHA, "
                        + "CONCAT_WS(' ', E.PNOM_EMPLEADO, E.SNOM_EMPLEADO, E.PAPE_EMPLEADO, E.SAPE_EMPLEADO) AS NOMBRE, E.CC_EMPLEADO "
                        + "FROM GASTOS G JOIN EMPLEADO E "
                        + "ON E.CC_EMPLEADO = G.CC_EMPLEADO_GASTO "
                        + "WHERE   DATE(G.FECHA_GASTO) = '" + fechaFormateada + "' "
                        + "ORDER BY G.FECHA_GASTO";

            }
            case 1 -> {

                if (!jTextFieldBnombre.getText().equals("")) {
                    SqlMostrarT = "SELECT "
                            + "G.ID_GASTO,  G.descripcion_gasto, G.CANTIDAD, G.CC_EMPLEADO_GASTO, G.VALOR_GASTO, G.FECHA_GASTO,  "
                            + "CONCAT_WS(', ', CASE DAYOFWEEK(G.FECHA_GASTO)"
                            + " WHEN 1 THEN 'Domingo' "
                            + "WHEN 2 THEN 'Lunes' "
                            + "WHEN 3 THEN 'Martes' "
                            + "WHEN 4 THEN 'Mircoles'  "
                            + "WHEN 5 THEN 'Jueves' "
                            + "WHEN 6 THEN 'Viernes' "
                            + "WHEN 7 THEN 'Sabado' "
                            + "END, DATE_FORMAT(G.FECHA_GASTO,'%d-%m-%Y')) AS FECHA, "
                            + "CONCAT_WS(' ', E.PNOM_EMPLEADO, E.SNOM_EMPLEADO, E.PAPE_EMPLEADO, E.SAPE_EMPLEADO) AS NOMBRE, E.CC_EMPLEADO "
                            + "FROM GASTOS G JOIN EMPLEADO E "
                            + "ON E.CC_EMPLEADO = G.CC_EMPLEADO_GASTO "
                            + "WHERE   E.PNOM_EMPLEADO  LIKE '%" + jTextFieldBnombre.getText() + "%' "
                            + "ORDER BY G.FECHA_GASTO";
                } else {
                    busqueda = 2;
                    mostrarDatosTabla();
                }
            }
            case 2 ->
                SqlMostrarT = "SELECT "
                        + "G.ID_GASTO,  G.descripcion_gasto, G.CANTIDAD, G.CC_EMPLEADO_GASTO, G.VALOR_GASTO, G.FECHA_GASTO,  "
                        + "CONCAT_WS(', ', CASE DAYOFWEEK(G.FECHA_GASTO)"
                        + " WHEN 1 THEN 'Domingo' "
                        + "WHEN 2 THEN 'Lunes' "
                        + "WHEN 3 THEN 'Martes' "
                        + "WHEN 4 THEN 'Mircoles'  "
                        + "WHEN 5 THEN 'Jueves' "
                        + "WHEN 6 THEN 'Viernes' "
                        + "WHEN 7 THEN 'Sabado' "
                        + "END, DATE_FORMAT(G.FECHA_GASTO,'%d-%m-%Y')) AS FECHA, "
                        + "CONCAT_WS(' ', E.PNOM_EMPLEADO, E.SNOM_EMPLEADO, E.PAPE_EMPLEADO, E.SAPE_EMPLEADO) AS NOMBRE, E.CC_EMPLEADO "
                        + "FROM GASTOS G JOIN EMPLEADO E "
                        + "ON E.CC_EMPLEADO = G.CC_EMPLEADO_GASTO "
                        + "ORDER BY G.FECHA_GASTO";
        }
        try {
            ConeBD.RstBD = (ResultSet) ConeBD.StmBD.executeQuery(SqlMostrarT);

            if (ConeBD.RstBD != null && ConeBD.RstBD.next()) {
                do {
                    DatGastos[0] = ConeBD.RstBD.getString("G.ID_GASTO");
                    DatGastos[1] = ConeBD.RstBD.getString("G.descripcion_gasto");
                    DatGastos[2] = ConeBD.RstBD.getString("G.CANTIDAD");
                    DatGastos[3] = ConeBD.RstBD.getString("G.VALOR_GASTO");
                    DatGastos[4] = ConeBD.RstBD.getString("NOMBRE");
                    DatGastos[5] = ConeBD.RstBD.getString("FECHA");
                    DatosGastos.addRow(DatGastos);
                } while (ConeBD.RstBD.next());
            } else {
                if (busqueda == 0) {
                    busqueda = 2;
                    SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy-MM-dd");
                    String fechaFormateada = formatoFecha.format(jDateChooserB.getDate());
                    JOptionPane.showMessageDialog(rootPane, "No se encontró algún gasto registrado en la fecha, " + fechaFormateada);
                    jDateChooserB.setDate(null);
                    borraCamposr();
                    mostrarDatosTabla();
                }
                if (busqueda == 1) {
                    busqueda = 2;
                    JOptionPane.showMessageDialog(rootPane, "No se encontró algún gasto registrado por, " + jTextFieldBnombre.getText());
                    borraCamposr();
                    jTextFieldBnombre.setText("");
                    mostrarDatosTabla();

                }

            }

        } catch (SQLException err) {
            err.printStackTrace();
        } finally {

        }
    }

    public void fechaMostrar() {
        this.jDateChooser1.setEnabled(false);
        Date fecha = new Date();
        jDateChooser1.setDateFormatString("dd-MM-yyyy");
        jDateChooser1.setDate(fecha);
    }

    public void apagar() {
        this.jTextFieldValor.setEnabled(false);
        this.jTextFieldDescripcion.setEnabled(false);
        this.jTextCantidad.setEnabled(false);
    }

    private void prenderCampos() {
        this.jTextFieldValor.setEnabled(true);
        this.jTextFieldDescripcion.setEnabled(true);
        this.jTextCantidad.setEnabled(true);
    }

    private void borraCamposr() {
        this.jTextFieldValor.setText("");
        this.jTextFieldDescripcion.setText("");
        this.jTextCantidad.setText("");
        this.jTextCantidad.requestFocus();
        this.jTextFieldBnombre.setText("");
//       this. jDateChooser1.setDate(null);

    }

    private void rSCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSCrearActionPerformed
        Ingreso = 2;
        prenderCampos();
    }//GEN-LAST:event_rSCrearActionPerformed

    private void rSCrear1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSCrear1ActionPerformed
        Ingreso = 1;
        jTextFieldID.setText("" + id_gastos);
        fechaMostrar();
        prenderCampos();
        borraCamposr();
    }//GEN-LAST:event_rSCrear1ActionPerformed

    private void rSCrear3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSCrear3ActionPerformed
        ConeBD.closeConexion_BD();
        dispose();
    }//GEN-LAST:event_rSCrear3ActionPerformed

    private void rSCrear4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSCrear4ActionPerformed
        eliminarGasto();
    }//GEN-LAST:event_rSCrear4ActionPerformed

    private void rSCrear5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSCrear5ActionPerformed
        agregarGasto();
        apagar();
    }//GEN-LAST:event_rSCrear5ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        ConeBD.openConeccion_BD();
        mostrarDatosTabla();
        fechaMostrar();
        usuarioid();
    }//GEN-LAST:event_formWindowOpened

    private void TablaGastosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaGastosMouseClicked
        int fila = TablaGastos.getSelectedRow();
        jDateChooser1.setEnabled(false);
        int Columna0 = 0, Columna1 = 1, Columna2 = 2, Columna3 = 3, Columna4 = 4, Columna5 = 5;
        jTextFieldID.setText(String.valueOf(this.TablaGastos.getValueAt(fila, Columna0)));
        jTextFieldDescripcion.setText(String.valueOf(this.TablaGastos.getValueAt(fila, Columna1)));
        jTextCantidad.setText(String.valueOf(this.TablaGastos.getValueAt(fila, Columna2)));
        jTextFieldValor.setText(String.valueOf(this.TablaGastos.getValueAt(fila, Columna3)));
        String fechaC = String.valueOf(this.TablaGastos.getValueAt(fila, Columna5));
        String partes[] = fechaC.split(", ");
        String fechaCadena = partes[1];
        SimpleDateFormat formato = new SimpleDateFormat("dd-MM-yyyy");
        try {
            Date fecha = formato.parse(fechaCadena);
            jDateChooser1.setDate(fecha);
        } catch (ParseException e) {
        }
    }//GEN-LAST:event_TablaGastosMouseClicked

    private void jButtonBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBusquedaActionPerformed
        if (jDateChooserB.getDate() != null) {
            busqueda = 0;
            mostrarDatosTabla();
        }

        if (!jTextFieldBnombre.getText().equals("")) {
            busqueda = 1;
            mostrarDatosTabla();
        }

        if (jDateChooserB.getDate() == null && jTextFieldBnombre.getText().isEmpty()) {
            busqueda = 2;
            mostrarDatosTabla();
        }
    }//GEN-LAST:event_jButtonBusquedaActionPerformed

    private void jTextFieldBnombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBnombreKeyTyped
        char e = evt.getKeyChar();
        mayus.notNum(evt, e);
        mayus.may(evt, e);

    }//GEN-LAST:event_jTextFieldBnombreKeyTyped

    private void jTextFieldBnombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBnombreKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldBnombreKeyPressed

    private void jTextFieldBnombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldBnombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldBnombreActionPerformed

    private void jTextFieldDescripcionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldDescripcionKeyTyped
        char e = evt.getKeyChar();
        mayus.may(evt, e);
        mayus.notNum(evt, e);
    }//GEN-LAST:event_jTextFieldDescripcionKeyTyped

    private void jTextFieldDescripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDescripcionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDescripcionActionPerformed

    private void jTextFieldIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldIDKeyTyped
        char e = evt.getKeyChar();
        mayus.num(evt, e);
    }//GEN-LAST:event_jTextFieldIDKeyTyped

    private void jTextFieldIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIDActionPerformed

    }//GEN-LAST:event_jTextFieldIDActionPerformed

    private void jTextFieldValorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldValorKeyTyped
        char e = evt.getKeyChar();
        mayus.num(evt, e);
//        moneda();

    }//GEN-LAST:event_jTextFieldValorKeyTyped

    public void moneda() {
//            String valorIngresado = jTextFieldValor.getText();
//    NumberFormat formato = NumberFormat.getCurrencyInstance(new Locale("es", "CO"));

//    try {
//        if (!valorIngresado.isEmpty() && valorIngresado.charAt(0) == 'C') {
//            // Si el valor comienza con el símbolo de moneda, quitarlo para el procesamiento interno
//            valorIngresado = valorIngresado.substring(1);
//        }
//        // Eliminar caracteres de formato, como comas y puntos
//        valorIngresado = valorIngresado.replaceAll("[^\\d.]", "");
//
//        double valor = Double.parseDouble(valorIngresado);
//        String valorFormateado = formato.format(valor);
//
//        jTextFieldValor.setText(valorFormateado);
//    } catch (NumberFormatException e) {
//        // Maneja la excepción si el valor ingresado no es un número válido
//        // Puedes mostrar un mensaje de error o tomar alguna otra acción
//    }
    }


    private void jTextCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextCantidadKeyTyped
        char e = evt.getKeyChar();
        mayus.num(evt, e);
    }//GEN-LAST:event_jTextCantidadKeyTyped

    private void jTextCantidadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextCantidadKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            if (!(jTextCantidad.getText().equals(""))) {
                jTextFieldDescripcion.requestFocus();
            } else {
                JOptionPane.showMessageDialog(null, "Debe Ingresar una cantidad");
                jTextCantidad.requestFocus();
            }
        }
    }//GEN-LAST:event_jTextCantidadKeyPressed

    private void jTextFieldDescripcionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldDescripcionKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            if (!(jTextFieldDescripcion.getText().equals(""))) {
                jTextFieldValor.requestFocus();
            } else {
                JOptionPane.showMessageDialog(null, "Debe Ingresar una descripción");
                jTextFieldDescripcion.requestFocus();
            }
        }
    }//GEN-LAST:event_jTextFieldDescripcionKeyPressed

    private void jTextFieldValorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldValorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldValorActionPerformed

    private void jTextFieldValorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldValorKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            if (!(jTextFieldValor.getText().equals(""))) {
                rSCrear5.requestFocus();
            } else {
                JOptionPane.showMessageDialog(null, "Debe Ingresar una un valor");
                jTextFieldValor.requestFocus();
            }
        }
    }//GEN-LAST:event_jTextFieldValorKeyPressed

    private void jTextFieldValorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldValorKeyReleased
       DecimalFormat df = new DecimalFormat("#,###");
        if (jTextFieldValor.getText().length() >= 1) 
        {
            jTextFieldValor.setText(df.format(Integer.valueOf(jTextFieldValor.getText().replace(".", "").replace(",", ""))) );
        }
    }//GEN-LAST:event_jTextFieldValorKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameGastos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameGastos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameGastos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameGastos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameGastos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaGastos;
    private javax.swing.JButton jButtonBusqueda;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooserB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private com.toedter.calendar.JMonthChooser jMonthChooser1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTextField jTextCantidad;
    private javax.swing.JTextField jTextFieldBnombre;
    private javax.swing.JTextField jTextFieldDescripcion;
    private javax.swing.JTextField jTextFieldID;
    private javax.swing.JTextField jTextFieldValor;
    private javax.swing.JLabel jlabelCc;
    private rsbuttom.RSButtonMetro rSCrear;
    private rsbuttom.RSButtonMetro rSCrear1;
    private rsbuttom.RSButtonMetro rSCrear3;
    private rsbuttom.RSButtonMetro rSCrear4;
    private rsbuttom.RSButtonMetro rSCrear5;
    // End of variables declaration//GEN-END:variables
}
